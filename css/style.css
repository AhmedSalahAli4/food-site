body {
  font-family: "Lato", sans-serif;
  background-color: black
}
/* nav bar style section  */
.aside {
  position: fixed;
  z-index: 22222;
  top: 0;
  height: 100%;
  width: 300px;
  display: flex;
  justify-content: space-between;
  transition: 0.5s;
  left: -240px;
  transition: all 0.8s;
}
.aside.active {
  left: 0;
}
li {
  list-style: none;
  text-decoration: none;
}
.aside .links {
  width: 240px;
  background-color: black;
  color: white;
}
.aside .links a {
  margin: 20px;
  text-decoration: none;
  display: block;
  color: rgb(255, 255, 255);
  padding: 8px 8px 8px 32px;
}
.aside .nav {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 60px;
  background-color: white;
}
.closebtn {
  position: absolute;
  top: 0;
  right: 60px;
  font-size: 38px;
  margin-left: 50px;
  color: white;
}

#logo {
  width: 50px;
}

.layar {
  position: absolute;
  top: 1%;
  bottom: 1%;
  left: 1px;
  right: 1px;
  opacity: 0;
  transition: all 0.8s;
  background-color: rgba(255, 166, 0, 0.7);
  cursor: pointer;
}
.layar:hover {
  top: 0px;
  bottom: 0px;
  left: 0px;
  right: 0px;
  opacity: 1;
  border-radius: 11px;
}


/*  layer area hover  */
#int {
  cursor: pointer;
  border: 1px solid rgb(255, 166, 0);
  transition: all 1s;
}
#area:hover {
  cursor: pointer;
  background-color: rgb(225, 166, 0);
}
#area {
  transition: all 1s;
}
#int:hover {
  background-color: rgb(255, 166, 0) !important;
  color: black !important;
}
.io:hover {
  color: black !important;
}
.io {
  transition: all 1s;
}

/* loading screen */
.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 99999999;
}

.tall-stack {
  animation: slide-plate-out 6000ms infinite;
  animation-fill-mode: forwards;
  animation-timing-function: ease;
}

.plate {
  width: 230px;
  height: 14px;
  background: #d3ebea;
  position: relative;
  border-radius: 6px 6px 2rem 2rem;
  animation: slide-plate-in 6000ms infinite;
  transform: translateX(100vw);
  animation-fill-mode: forwards;
  animation-timing-function: ease;
}
.plate .plate-bottom {
  content: "";
  display: block;
  height: 50%;
  width: 140px;
  background: #c5e5e3;
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -70px;
  border-radius: 0 0 1rem 1rem;
  z-index: 1;
}
.plate .shadow {
  position: absolute;
  top: 130%;
  left: 50%;
  margin-left: -90px;
  z-index: 0;
  width: 180px;
  height: 10px;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 80%;
  z-index: 0;
}

.butter {
  width: 48px;
  height: 12px;
  background: #eadd4d;
  margin: auto;
  border-radius: 2px;
  box-shadow: inset 0 -2px 0 2px rgba(85, 74, 35, 0.1);
}

.pancake {
  width: 200px;
  height: 14px;
  background: #d8cb9f;
  border-radius: 1rem;
  box-shadow: inset 0 -2px 0 3px rgba(85, 74, 35, 0.1);
  margin: auto;
}

.falling-element {
  transform: translateY(-100vh);
  animation-timing-function: ease-in;
  animation-fill-mode: forward;
  animation: element-drop 6000ms infinite;
  position: relative;
}

.falling-element:nth-child(8) {
  animation-delay: 0.4s;
}

.falling-element:nth-child(7) {
  animation-delay: 0.62s;
}

.falling-element:nth-child(6) {
  animation-delay: 0.84s;
}

.falling-element:nth-child(5) {
  animation-delay: 1.06s;
}

.falling-element:nth-child(4) {
  animation-delay: 1.28s;
}

.falling-element:nth-child(3) {
  animation-delay: 1.5s;
}

.falling-element:nth-child(2) {
  animation-delay: 1.72s;
}

.falling-element:nth-child(1) {
  animation-delay: 1.94s;
}

@keyframes element-drop {
  0%,
  100% {
    transform: translateY(-100vh) scaleY(0.7);
    opacity: 1;
  }
  11% {
    transform: translateY(20%) scaleY(1.2);
  }
  13% {
    transform: translateY(-30%) scaleY(0.9);
  }
  14%,
  67% {
    transform: translateY(0%) scaleY(1);
    opacity: 1;
  }
  68% {
    opacity: 0;
    transition: none;
    transform: translateY(-100vh) scaleY(0.7);
  }
}
@keyframes slide-plate-in {
  0% {
    transform: translateX(100vw);
  }
  15%,
  100% {
    transform: translateX(0);
  }
}
@keyframes slide-plate-out {
  65% {
    transform: translateX(0);
  }
  85%,
  100% {
    transform: translateX(-100vw);
  }
}



